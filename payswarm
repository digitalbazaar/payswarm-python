#!/usr/bin/env python
#
# Performs a number of PaySwarm client commands.
import sys
sys.path.insert(0, "lib")

from optparse import OptionParser
import os
import payswarm
import time

USAGE = """%prog [OPTIONS] COMMAND ...

Performs a variety of PaySwarm client operations such as registering 
with a PaySwarm Authority, generating public/private keys, digitally 
signing and registering assets for sale, registering listings, 
establishing Payment Sessions and performing purchases.

Examples:
   %prog config             [Configure a number of PaySwarm defaults]
   %prog register           [Register the PaySwarm client]
   %prog purchase LISTING   [Perform a purchase using the client]
   %prog receipt  LISTING   [Retrieve a contract for a previous purchase]

************** %prog command line options **************"""

DEFAULTS = \
{ \
    "authority": "https://dev.payswarm.com/client-config" \
}

def _parse_options():
    """Get options from command line and return them."""
    parser = OptionParser(usage=USAGE)
    parser.add_option(
        "--authority", action="store",
        default=DEFAULTS["authority"], 
        help=" "
        "[Default: %default]")
    parser.add_option(
        "-c", "--config", action="store",
        default=None, 
        help="The configuration file to read in addition to the regular "
        "configuration files. "
        "[Default: %default]")

    options, args = parser.parse_args()
    options.args = args

    # Check to make sure that there are enough options
    if(len(options.args) < 1):
        sys.stderr.write( \
            "ERROR: You must provide at least one command to execute.\n")
        parser.print_help()
        sys.exit(1)

    return options

def _configure(config):
    """Performs basic PaySwarm client configuration by asking a few questions.
    """
    sys.stdout.write("""
In order to fully configure this PaySwarm client, you will need a
Web Browser. Go to the following URL and create an Application Key:

https://dev.payswarm.com/profile/clients

""")
    sys.stdout.write("What is the OAuth Token ID? ")
    sys.stdout.flush()
    token = sys.stdin.readline()
    sys.stdout.write("What is the OAuth Token Secret? ")
    sys.stdout.flush()
    secret = sys.stdin.readline()
    payswarm.config.set_oauth(config, token, secret)

    sys.stdout.write("Generating public/private keypair...\n")
    sys.stdout.flush()
    #payswarm.config.generate_keys(config)

    sys.stdout.write( \
        "Retrieving PaySwarm Authority Web Service endpoints...\n")
    sys.stdout.flush()
    payswarm.config.retrieve_endpoints(config)

    sys.stdout.write("Registering public key with PaySwarm Authority...\n")
    sys.stdout.flush()

    sys.stdout.write("Configuration complete.\n")
    payswarm.config.save(config)

if __name__ == "__main__":
    # Get the options from the command line
    options = _parse_options()

    # Get configuration options from /etc/payswarm1.cfg and ~/.payswarm1
    config = payswarm.config.parse(DEFAULTS, options)

    for command in options.args:
        if(command == "config"):
            _configure(config)
        elif(command == "register"):
            pass
        elif(command == "purchase"):
            pass
        elif(command == "receipt"):
            pass

